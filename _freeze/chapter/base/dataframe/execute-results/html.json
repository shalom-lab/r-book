{
  "hash": "4d5a5329197a61f98b26d68abecafd41",
  "result": {
    "engine": "knitr",
    "markdown": "# 数据框(data.frame)\n\n数据框是 R 语言中一种常用的数据结构，它是一个二维数据表，用于存储一组不同类型的数据，每列数据都有一个对应的列名。类似EXCEL中的Sheet表格。\n\n一些常见的数据框操作包括:\n\n-   创建数据框: 使用 `data.frame()` 函数创建数据框。\n-   查看数据框: 使用 `head()` 和 `tail()` 函数查看数据框的前几行和后几行，使用 `str()` 函数查看数据框的数据类型和结构。\n-   选择数据框中的某一列: 使用 `$` 操作符选择某一列。\n-   选择数据框中的某一行: 使用行索引选择某一行。\n-   选择数据框中的某一个值: 使用行索引和列名选择某一个值。\n-   添加数据框列: 使用 `$` 操作符添加新的列。\n-   添加数据框行: 使用 `rbind()` 函数添加新的行。\n-   删除数据框列: 使用 `$` 操作符删除某一列。\n-   删除数据框行: 使用行索引删除某一行。\n-   排序数据框: 使用 `order()` 函数对某一列或多列进行排序。\n-   过滤数据框: 使用布尔运算符过滤数据框中符合条件的行。\n\n## 代码示例\n\n\n\n\n\n\n::: {.cell context='setup'}\n\n```{.r .cell-code}\n# 创建一个数据框\nmy_data_frame <- data.frame(\n  id = c(1, 2, 3),\n  name = c(\"Alice\", \"Bob\", \"Charlie\"),\n  age = c(20, 25, 30),\n  gender = c(\"F\", \"M\", \"M\")\n)\n\n# 查看数据框的前几行\nhead(my_data_frame)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"Bob\",\"3\":\"25\",\"4\":\"M\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 查看数据框的后几行\ntail(my_data_frame)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"Bob\",\"3\":\"25\",\"4\":\"M\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 查看数据框的数据类型和结构\nstr(my_data_frame)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t3 obs. of  4 variables:\n $ id    : num  1 2 3\n $ name  : chr  \"Alice\" \"Bob\" \"Charlie\"\n $ age   : num  20 25 30\n $ gender: chr  \"F\" \"M\" \"M\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 选择数据框中的某一列\nmy_data_frame$name\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Alice\"   \"Bob\"     \"Charlie\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 选择数据框中的某一行\nmy_data_frame[2, ]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2\",\"2\":\"Bob\",\"3\":\"25\",\"4\":\"M\",\"_rn_\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 选择数据框中的某一个值\nmy_data_frame[2, \"name\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Bob\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 添加数据框列\nmy_data_frame$score <- c(90, 85, 80)\n\n# 添加数据框行\nnew_row <- data.frame(id = 4, name = \"David\", age = 32, gender = \"M\", score = 75)\nrbind(my_data_frame, new_row)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"score\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\",\"5\":\"90\"},{\"1\":\"2\",\"2\":\"Bob\",\"3\":\"25\",\"4\":\"M\",\"5\":\"85\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"5\":\"80\"},{\"1\":\"4\",\"2\":\"David\",\"3\":\"32\",\"4\":\"M\",\"5\":\"75\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 删除数据框列\nmy_data_frame$score <- NULL\nmy_data_frame\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\"},{\"1\":\"2\",\"2\":\"Bob\",\"3\":\"25\",\"4\":\"M\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 删除数据框行\nmy_data_frame <- my_data_frame[-2, ]\nmy_data_frame\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\",\"_rn_\":\"1\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 排序数据框\nmy_data_frame <- my_data_frame[order(my_data_frame$age), ]\nmy_data_frame\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Alice\",\"3\":\"20\",\"4\":\"F\",\"_rn_\":\"1\"},{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# 过滤数据框\nmy_data_frame[my_data_frame$age >= 25, ]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"3\",\"2\":\"Charlie\",\"3\":\"30\",\"4\":\"M\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\n## 行索引和列索引\n\n在 R 语言中，数据框是一种二维数据表，其中每行表示一个观察值，每列表示一个变量。数据框的行索引和列索引是用来确定某一个特定的数据值的位置的方法。\n\n-   行索引: 数据框的行索引是从 1 开始的正整数，用来标识每一行。例如，在上面的代码中，第一行的行索引是 1，第二行的行索引是 2，以此类推。\n-   列索引: 数据框的列索引是列名，用来标识每一列。例如，在上面的代码中，第一列的列索引是 `id`，第二列的列索引是 `name`，以此类推。\n\n我们可以使用行索引和列索引来选择数据框中的某一个值。例如，如果我们想选择第二行第三列的值，可以使用 `my_data_frame[2, \"age\"]` 这样的语法。\n\n## 行索引和列索引的常见用法\n\n行索引和列索引在 R 语言中都非常常见，它们有许多用途。下面是一些常见的行索引和列索引的用法:\n\n-   选择数据框中的某一个值: 可以使用行索引和列索引选择数据框中的某一个值。例如，`my_data_frame[2, \"name\"]` 表示选择第二行第 `name` 列的值。\n-   添加数据框行: 可以使用行索引和 `rbind()` 函数添加新的行到数据框中。例如，`my_data_frame <- rbind(my_data_frame, new_row)` 表示将新的行 `new_row` 添加到数据框 `my_data_frame` 的末尾。\n-   删除数据框行: 可以使用行索引删除数据框中的某一行。例如，`my_data_frame <- my_data_frame[-2, ]` 表示删除数据框 `my_data_frame` 中的第二行。\n-   排序数据框: 可以使用行索引和 `order()` 函数对数据框进行排序。例如，`my_data_frame <- my_data_frame[order(my_data_frame$age), ]` 表示根据 `age` 列对数据框 \\`\n\n## \\[\\]在R语言中的含义\n\n在 R 语言中，`[]` 符号用来表示数据结构的索引。具体来说，它表示选择数据结构中的某一部分。例如，如果 `my_data` 是一个数据框，那么 `my_data[2, \"name\"]` 表示选择数据框 `my_data` 中的第二行第 `name` 列的值。\n\n在 R 语言中，`[]` 符号还可以用来进行其他操作，例如排序、过滤、删除等。它还可以用来创建新的数据结构，例如向量、数组、数据框等。有关具体用法，您可以参考 R 语言的相关文档和教程。\n\n## \\[\\]中缺省行索引和列索引的意义\n\n在 R 语言中，当 `[]` 符号中的行索引或列索引缺省时，它们会被自动填充为默认值。\n\n对于行索引，如果缺省，默认值是 1:n，其中 n 是数据框中的行数。例如，如果 `my_data` 是一个数据框，那么 `my_data[, \"name\"]` 和 `my_data[1:n, \"name\"]` 是等价的，都表示选择数据框 `my_data` 中的所有行的 `name` 列。\n\n对于列索引，如果缺省，默认值是所有列的名称。例如，如果 `my_data` 是一个数据框，那么 `my_data[2, ]` 和 `my_data[2, colnames(my_data)]` 是等价的，都表示选择数据框 `my_data` 中的第二行的所有列。\n\n通过使用缺省行索引和列索引，可以使代码更简洁易读。例如，我们可以使用 `my_data[, \"name\"]` 表示选择数据框 `my_data` 中的所有行的 `name` 列，而不用写出每一行的行索引。这样做既能够保证代码的正确性，又能够提高代码的可读性。\n\n当然，在实际使用中，还需要注意一些特殊情况。例如，如果缺省行索引和列索引可能导致代码不易理解，或者会与其他语法产生冲突，那么就需要明确指定行索引和列索引了。总之，在使用 `[]` 符号时，应该根据实际情况谨慎选择是否使用缺省行索引和列索引。\n\n## 行索引和列索引也可以填写布尔值吗？\n\n是的，在 R 语言中，行索引和列索引也可以填写布尔值。这种用法可以用来选择数据框中满足某一条件的行和列。\n\n例如，如果 `my_data` 是一个数据框，那么 `my_data[my_data$age > 30, ]` 表示选择数据框 `my_data` 中 `age` 列大于 30 的所有行。如果我们还想选择其中的 `name` 和 `age` 列，可以使用如下语句:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- data.frame(\n  id = c(1, 2, 3),\n  name = c(\"Alice\", \"Bob\", \"Charlie\"),\n  age = c(20, 25, 30),\n  gender = c(\"F\", \"M\", \"M\")\n)\nmy_data[my_data$age > 25, c(\"name\", \"age\")]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Charlie\",\"2\":\"30\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\n这样，我们就可以快速选择数据框中满足某一条件的行和列了。这种方法非常方便，并且能够有效地过滤数据，为进一步的分析提供更为精细的数据。\n\n需要注意的是，在使用行索引和列索引时，需要确保它们的长度与数据框的行数和列数相同。如果长度不匹配，那么可能会导致代码出错或不能正常运行。因此，在使用行索引和列索引时，应该认真检查代码是否正确。\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}